stages:
 - build
 - deploy

 # Building on master branch, treating warnings as errors.
build_master:
  stage: build
  script:
    - 'dotnet restore' # restore Nuget dependencies
    - 'dotnet msbuild /p:Configuration=Release /WarnAsError SpotifyWebApi.sln' # build the project
  only:
    - master
    - tags

# Building on any other branch.
build:
  stage: build
  script:
    - 'dotnet restore' # restore Nuget dependencies
    - 'dotnet build -c Release SpotifyWebApi.sln' # build the project
  except:
    - tags
    - master

# Deploys the nuget package
deploy_prerelease:
  stage: deploy
  script:
    - 'GitVersionerNet' # version files according to latest tag
    - 'dotnet pack -c Release --output ../nuget SpotifyWebApi/SpotifyWebApi.csproj'
    - 'nuget push .\nuget\SpotifyWebApi-Core.*.nupkg -ApiKey %NUGET_API_KEY% -Source %NUGET_SOURCE%'
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build
  only:
    - develop
  allow_failure: false

# Deploys the nuget package
deploy:
  stage: deploy
  script:
    - 'GitVersionerNet --short' # version files according to latest tag
    - 'dotnet pack -c Release --output ../nuget SpotifyWebApi/SpotifyWebApi.csproj'
    - 'nuget push .\nuget\SpotifyWebApi-Core.*.nupkg -ApiKey %NUGET_API_KEY% -Source %NUGET_SOURCE%'
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build
  only:
    - tags
  allow_failure: false